import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "org.grails.plugins:hibernate4:5.0.6"
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

version "0.1"
group "grailsapp"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
apply plugin:"org.akhikhl.gretty"

// JDK 7
sourceCompatibility = 1.7
targetCompatibility = 1.7

//apply plugin:"jetty"

/*jettyRun {
    httpPort=8888
}*/

/*jetty{
    version='8.1.17.v20150415'
}*/

ext{
   // env=""
    testProp=prop
}

configurations {
    runtime.exclude group: "org.eclipse.jetty", module: "jetty-server"
}


gretty {
    // supported values:
    // 'jetty7', 'jetty8', 'jetty9', 'tomcat7', 'tomcat8'
	 port = 8888
    servletContainer = 'jetty9'
    jvmArgs = ["-Dgrails.env=$env"]

    /**
     * This jvmArg is used to set config location
     * where Spring boot will look for Config Files
     */
    // '-Dspring.config.location=classpath:/config/'
}

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework:spring-jms:4.2.0.RELEASE"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
   // compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web:3.1.8"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    provided "javax.servlet:javax.servlet-api:3.1.0"
    compile "org.apache.activemq:activemq-core:5.7.0"

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'


}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

processResources {
    println "The delegate is ${delegate.getClass()}"
    filesMatching "**/*", {
        println "The argument is ${it.getClass()}"
    }
    //exclude "**/*-staging.yml"
    filter tokens: [
            "passed.env": project.property("testProp")
    ],org.apache.tools.ant.filters.ReplaceTokens.class
}

exec{
    commandLine 'cmd', '/c' ,'gradle', '-version'
}



